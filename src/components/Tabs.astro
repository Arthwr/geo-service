---
import Geodesy from "../components/tab-content/Geodesy.astro";
import Laser from "../components/tab-content/Laser.astro";
import Geology from "../components/tab-content/Geology.astro";

export interface Props {
  activeTextColor?: string;
  headings: string[];
  contents: any[];
}
const { headings, contents, activeTextColor } = Astro.props as Props;

const componentMap: { [key: string]: any } = {
  geodesy: Geodesy,
  laser: Laser,
  geology: Geology,
};
---

<div class="tabs">
  <ul class="tabs-header">
    {headings.map((heading) => <li>{heading}</li>)}
  </ul>
  <div class="tabs-wrapper">
    <ul class="tabs-content">
      {
        contents.map((content) => {
          const Component = componentMap[content];
          return Component ? (
            <li class="tabs">
              <article class="w-full h-full">
                <Component />
              </article>
            </li>
          ) : null;
        })
      }
    </ul>
  </div>
</div>

<style>
  .tabs {
    margin-left: auto;
    margin-right: auto;
    max-width: 1288px;
  }
  .tabs-header {
    display: flex;
    justify-content: space-between;
    font-size: 36px;
    font-weight: 400;
    color: rgba(255, 255, 255, 0.95);
  }

  .tabs-header li {
    font-weight: 400;
    padding: 10px 33px;
    cursor: pointer;
    color: #7d7d7d;
  }

  .tabs-header li:not(.active-tab):hover {
    font-weight: 600 !important;
  }

  .tabs-wrapper {
    display: flex;
    justify-content: center;
  }

  .tabs-content {
    width: 100%;
    height: 100%;
    font-size: 30px;
    padding: 50px 33px;
    border: 0.5px solid rgba(33, 109, 106, 0.95);
    font-weight: bold;
    background: #f4f4f4;
  }
</style>

<script define:vars={{ activeTextColor }}>
  function createTabs(element) {
    const header = element.querySelector(".tabs-header");
    const content = element.querySelector(".tabs-content");
    const tab_headers = [...header.children];
    const tab_contents = [...content.children];
    tab_contents.forEach((x) => (x.style.display = "none")); //?
    let current_tab_index = -1;

    function setTab(index) {
      if (current_tab_index > -1) {
        tab_headers[current_tab_index].classList.remove("active-tab");
        tab_headers[current_tab_index].style.fontWeight = 400;
        tab_headers[current_tab_index].style.color = "#7D7D7D";
        tab_headers[current_tab_index].style.backgroundColor = "";
        tab_headers[current_tab_index].style.border = "";
        tab_contents[current_tab_index].style.display = "none";
      }
      tab_headers[index].classList.add("active-tab");
      tab_headers[index].style.fontWeight = 800;
      tab_headers[index].style.color = activeTextColor;
      tab_headers[index].style.backgroundColor = "#397774";
      tab_headers[index].style.border = "1px solid #397774";
      tab_headers[index].style.borderRadius = "8px 8px 0px 0px";
      tab_contents[index].style.display = "flex";

      current_tab_index = index;
    }

    let default_tab_index = tab_headers.findIndex((x) => {
      return [...x.classList].indexOf("default-tab") > -1;
    });

    default_tab_index = default_tab_index === -1 ? 0 : default_tab_index;
    setTab(default_tab_index);
    tab_headers.forEach((x, i) => (x.onclick = (event) => setTab(i)));
  }
  [...document.querySelectorAll(".tabs")].forEach((x) => createTabs(x));
</script>
