---
export interface Props {
  activeTextColor?: string;
  headings: string[];
  contents: string[];
}
const { headings, contents, activeTextColor } = Astro.props as Props;
---

<div class="tabs">
  <ul class="tabs-header">
    {headings.map((heading) => <li>{heading}</li>)}
  </ul>
  <div class="tabs-wrapper">
    <ul class="tabs-content">
      {
        contents.map((content) => (
          <li class="tabs">
            <article>{content}</article>
          </li>
        ))
      }
    </ul>
  </div>
</div>

<style>
  .tabs {
    margin-left: auto;
    margin-right: auto;
    max-width: 1288px;
  }
  .tabs-header {
    display: flex;
    justify-content: space-between;
    font-size: 36px;
    font-weight: 400;
    color: rgba(255, 255, 255, 0.95);
  }

  .tabs-header li {
    border: 1px solid #397774;
    border-radius: 8px 8px 0px 0px;
    padding: 10px 33px;
    background: #397774;
    cursor: pointer;
  }

  .tabs-wrapper {
    display: flex;
    justify-content: center;
  }

  .tabs-content {
    font-size: 30px;
    padding: 20px;
    border: 0.5px solid rgba(33, 109, 106, 0.95);
    font-weight: bold;
    background: #f4f4f4;
  }
</style>

<script define:vars={{ activeTextColor }}>
  function createTabs(element) {
    const header = element.querySelector(".tabs-header");
    const content = element.querySelector(".tabs-content");
    const tab_headers = [...header.children];
    const tab_contents = [...content.children];
    tab_contents.forEach((x) => (x.style.display = "none")); //?
    let current_tab_index = -1;

    function setTab(index) {
      if (current_tab_index > -1) {
        tab_headers[current_tab_index].style.fontWeight = 400;
        tab_headers[current_tab_index].style.color = "#fff";
        tab_contents[current_tab_index].style.display = "none";
      }
      tab_headers[index].style.fontWeight = 800;
      tab_headers[index].style.color = activeTextColor;
      tab_contents[index].style.display = "flex";
      current_tab_index = index;
    }

    let default_tab_index = tab_headers.findIndex((x) => {
      return [...x.classList].indexOf("default-tab") > -1;
    });

    default_tab_index = default_tab_index === -1 ? 0 : default_tab_index;
    setTab(default_tab_index);
    tab_headers.forEach((x, i) => (x.onclick = (event) => setTab(i)));
  }
  [...document.querySelectorAll(".tabs")].forEach((x) => createTabs(x));
</script>
